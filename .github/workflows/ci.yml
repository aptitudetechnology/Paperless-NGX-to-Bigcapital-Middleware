name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker # Added this step to ensure Docker and Docker Compose are available
      uses: docker/setup-docker@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub (if applicable)
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
      # Only run if you need to push images to Docker Hub during CI/CD
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    - name: Build Docker images
      run: docker-compose -f docker/docker-compose.yml build

    - name: Run Unit and Database Tests
      run: |
        docker-compose -f docker/docker-compose.yml up -d db
        docker-compose -f docker/docker-compose.yml run --rm web pytest tests/test_core.py tests/test_clients.py tests/test_database.py tests/test_web.py

    - name: Run Integration Tests
      run: |
        docker-compose -f docker/docker-compose.yml up -d
        docker-compose -f docker/docker-compose.yml run --rm web pytest -m integration tests/test_integration.py
      # Ensure services are healthy before running integration tests
      env:
        WEB_APP_URL: http://web:5000 # Use service names for inter-container communication
        PAPERLESS_API_URL: http://paperless:8000/api # Example
        BIGCAPITAL_API_URL: http://bigcapital:9000/api # Example

    - name: Clean up Docker containers
      run: docker-compose -f docker/docker-compose.yml down -v
